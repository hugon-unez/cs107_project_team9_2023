# Name of the workflow
name: CS107 Project - Code Coverage

# Controls when the workflow will run
on:
  # Triggers the workflow on a pull request for the dev and main branch
  pull_request:
    types: [opened, reopened]
    branches:
      - dev
      - main

  # Triggers the workflow on push for all branches
  push:
    branches:
      - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  test_code_coverage_core_functions_module:
    name: Code coverage of the tests for the core functions module
    runs-on: ubuntu-latest
    steps:
      # Checkout the head of branch (what you just pushed)
      - uses: actions/checkout@v3

      # Setup Python environment in the container
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10' # let's use a recent version

      # Install Python dependencies
      - name: Install dependencies
        run: python -m pip install build pytest pytest-cov

      # Build and install our package in the container
      - name: Build and install the group9_package in the container (using PEP517/518)
        run: (python -m build --wheel && python -m pip install dist/*)

      # Set execute permissions on the script file
      - name: Set execute permissions on run_tests.sh
        run: chmod +x tests/run_tests.sh

      # Run the test coverage for the build
      - name: Run tests and generate coverage html
        run: (cd tests && pytest --cov=group9_package)

      - name: Check code coverage
        run: |
          coverage_threshold=90
          coverage_result=$(cd tests && coverage run --source=group9_package -m pytest && coverage report --fail-under=$coverage_threshold)
          echo "$coverage_result"